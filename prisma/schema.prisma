// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum IngredientCategoryEnum {
  VEGETABLE
  FRUIT
  MEAT
  DAIRY
  GRAIN
  SPICE
  OTHER
}

enum RecipeCategoryEnum {
  APPETIZER
  MAIN_COURSE
  DESSERT
  SNACK
  BEVERAGE
  OTHER
}

enum DietEnum {
  VEGETARIAN
  VEGAN
  GLUTEN_FREE
  KETO
  PALEO
  OTHER
}

enum MealTypeEnum {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
  OTHER
}

enum MineralName {
  CALCIUM
  IRON
  MAGNESIUM
  POTASSIUM
  SODIUM
  OTHER
}

enum VitaminName {
  VITAMIN_A
  VITAMIN_B
  VITAMIN_C
  VITAMIN_D
  VITAMIN_E
  OTHER
}

model ApiKey {
  key     String   @id @default(uuid())
  menus   Menu[]
  recipes Recipe[]
}

model Menu {
  id_menu String     @id @default(uuid())
  name    String
  key     String
  apiKey  ApiKey     @relation(fields: [key], references: [key])
  items   MenuItem[]

  @@map("Menu")
}

model Recipe {
  id_recipe         String              @id @default(uuid())
  title             String
  description       String
  image             String
  prepTimeMin       Int?
  cookTimeMin       Int?
  is_public         Boolean
  category          RecipeCategoryEnum?
  diet              DietEnum?
  key               String
  apiKey            ApiKey              @relation(fields: [key], references: [key])
  steps             RecipeStep[]
  recipeIngredients RecipeIngredient[]
  menuItems         MenuItem[]

  @@map("Recipe")
}

model Ingredient {
  id_ingredient     String                  @id @default(uuid())
  name              String
  proteins          Float
  fats              Float
  carbs             Float
  sugars            Float
  salt              Float
  fiber             Float
  caloriesPerUnit   Float
  category          IngredientCategoryEnum?
  mineralName       MineralName?
  mineralValue      Float?
  vitaminName       VitaminName?
  vitaminValue      Float?
  recipeIngredients RecipeIngredient[]

  @@map("Ingredient")
}

model MenuItem {
  id_menu_item String        @id @default(uuid())
  position_    Int
  mealType     MealTypeEnum?
  id_recipe    String
  id_menu      String
  recipe       Recipe        @relation(fields: [id_recipe], references: [id_recipe])
  menu         Menu          @relation(fields: [id_menu], references: [id_menu])

  @@map("MenuItem")
}

model RecipeStep {
  id_recipe_step String @id @default(uuid())
  position_      Int
  content        String
  durationMin    Int?
  id_recipe      String
  recipe         Recipe @relation(fields: [id_recipe], references: [id_recipe])

  @@map("RecipeStep")
}

model RecipeIngredient {
  id_recipe     String
  id_ingredient String
  quantity      Float
  unit          String
  recipe        Recipe     @relation(fields: [id_recipe], references: [id_recipe])
  ingredient    Ingredient @relation(fields: [id_ingredient], references: [id_ingredient])

  @@id([id_recipe, id_ingredient])
  @@map("RecipeIngredient")
}
